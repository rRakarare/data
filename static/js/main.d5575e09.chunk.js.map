{"version":3,"sources":["components/Header.js","components/Personal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Personal","useState","r","g","b","a","tableData","setTableData","getMaskPath","x","y","width","height","anzahlPers","sc","pathString","i","createPersonMaskShape","getPath","createPersonShape","getVkPath","vkArray","path","oneunit","forEach","item","newheight","addHeight","MaskBar","props","fill","keyname","anzahl","d","stroke","PersonBar","fillOpacity","FillBar","vk","renderCustomizedLabel","value","fontSize","fontWeight","textAnchor","dominantBaseline","isNaN","parseFloat","toFixed","AnzahlBars","map","key","Bar","dataKey","data","shape","stackId","length","LabelList","labelValue","content","position","FillBars","MaskBars","dataset","setDataset","setData","bereichsauswahl","setbereichsauswahl","bereichCol","setBereichCol","alterauswahl","setalterauswahl","alterCol","setAlterCol","vkauswahl","setvkauswahl","vkCol","setVkCol","minAge","setMinAge","maxAge","setmaxAge","setFontSize","graphheight","setGraphheight","resultVis","setResultVis","createData","csvcols","bereichsIndex","findIndex","altersIndex","vkIndex","newDataset","filter","shift","allKeys","keysunique","Set","keysliste","Array","from","newkeys","console","log","name","color","Math","floor","random","it","newit","replace","reduce","allAges","parseInt","min","max","ages","push","newData","anzahlobj","vkobj","newItem","arr","Object","values","lval","labelPosition","handleChange","index","rgb","handleclick","handleClose","reColor","TableInsert","element","Button","size","style","background","onClick","zIndex","top","right","bottom","left","asdqwe","onChange","useEffect","onDrop","onError","err","file","inputElem","reason","addRemoveButton","onRemoveFile","Form","Row","controlId","Col","Label","Control","as","custom","e","target","variant","block","disabled","Table","striped","bordered","hover","placeholder","type","graph","document","querySelector","svgURL","XMLSerializer","serializeToString","svgBlob","Blob","saveAs","ResponsiveContainer","BarChart","margin","barGap","CartesianGrid","strokeDasharray","XAxis","tickMargin","padding","YAxis","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5575e09.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\">Data Tools</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  Tooltip,\r\n  YAxis,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n  LabelList,\r\n} from \"recharts\";\r\nimport { CSVReader } from \"react-papaparse\";\r\nimport { Form, Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { saveAs } from \"file-saver\";\r\nimport RangeSlider from \"react-bootstrap-range-slider\";\r\n\r\nfunction Personal() {\r\n  const [tableData, setTableData] = useState([\r\n    [\"\", 0, 0, { r: 0, g: 0, b: 0, a: 0 }, false],\r\n  ]);\r\n\r\n  const createPersonMaskShape = (x, y, width, height, anzahlPers, sc) => {\r\n    let pathString = \"\";\r\n    for (let i = 1; i < anzahlPers + 1; i++) {\r\n      pathString += `M${x - (width * 1) / 2 - (10.583 * sc) / 2},${\r\n        y + height - sc * 31.75 * i\r\n      }v ${sc * 7.713741} c 0,${sc * -1.8338377} ${sc * 2.649874},${\r\n        sc * -1.8338305\r\n      } ${sc * 5.291667},${sc * -1.8365803} ${sc * 2.649642},${sc * -0.00273} ${\r\n        sc * 5.291665\r\n      },${sc * -0.00273} ${sc * 5.291667},${sc * 1.8365803} v ${\r\n        sc * -7.713741\r\n      } h ${sc * -5.291667} c ${sc * 1.461192},0 ${sc * 2.645834},${\r\n        sc * 1.2333934\r\n      } ${sc * 2.645834},${sc * 2.7548705} 0,${sc * 1.5214803} ${\r\n        sc * -1.184642\r\n      },${sc * 2.7548707} ${sc * -2.645834},${sc * 2.7548707} ${\r\n        sc * -1.461195\r\n      },0 ${sc * -2.645833},${sc * -1.2333904} ${sc * -2.645833},${\r\n        sc * -2.7548707\r\n      } 0,${sc * -1.5214771} ${sc * 1.184638},${sc * -2.7548705} ${\r\n        sc * 2.645833\r\n      },${sc * -2.7548705} z m ${sc * 3.527778},${sc * 31.749999} c ${\r\n        sc * -0.661431\r\n      },0 ${sc * -1.322917},${sc * -0.298665} ${sc * -1.322917},${\r\n        sc * -0.895554\r\n      } v ${sc * -21.3041237} h ${sc * -0.440972} v ${sc * 8.7234977} c 0,${\r\n        sc * 0.826466\r\n      } ${sc * -1.763889},${sc * 0.826466} ${sc * -1.763889},0 v ${\r\n        sc * 13.47618\r\n      } z m 0,0 h ${sc * 3.527778} c ${sc * -0.66143},0 ${sc * -1.322916},${\r\n        sc * -0.298662\r\n      } ${sc * -1.322916},${sc * -0.895554} ${sc * -3e-6},${sc * -2.938537} 0,${\r\n        sc * -11.202932\r\n      } 0,${sc * -11.202932} h ${sc * -0.440973} ${sc * -0.440972} v ${\r\n        sc * 11.202932\r\n      } c 0,${sc * 0.596889} ${sc * -0.661485},${sc * 0.895554} ${\r\n        sc * -1.322917\r\n      },${sc * 0.895554} z m ${sc * 3.527778},0 h ${sc * 3.527778} v ${\r\n        sc * -13.47618\r\n      } c 0,${sc * 0.826466} ${sc * -1.7638887},${sc * 0.826466} ${\r\n        sc * -1.7638887\r\n      },0 ${sc * 4e-6},${sc * -2.846709} 0,${sc * -8.7234977} 0,${\r\n        sc * -8.7234977\r\n      } h ${sc * -0.4409723} c 0,0 ${sc * -3e-6},${sc * 16.9881477} 0,${\r\n        sc * 21.3041237\r\n      } 0,${sc * 0.596892} ${sc * -0.661486},${sc * 0.895554} ${\r\n        sc * -1.322917\r\n      },${sc * 0.895554} z`;\r\n    }\r\n    return pathString;\r\n  };\r\n  const createPersonShape = (x, y, width, height, anzahlPers, sc) => {\r\n    let pathString = \"\";\r\n    for (let i = 1; i < anzahlPers + 1; i++) {\r\n      pathString += `M${x + width / 2 - (10.583 * sc) / 2},${\r\n        y + height - sc * 31.75 * i\r\n      }m ${sc * 5.2916666},${sc * 19.651482} h ${sc * 0.4409728} c 0,0 ${\r\n        sc * -2.9e-6\r\n      },${sc * 8.264644} 0,${sc * 11.203181} 0,${sc * 1.193782} ${\r\n        sc * 2.6458341\r\n      },${sc * 1.193782} ${sc * 2.6458341},0 ${sc * -2.9e-6},${\r\n        sc * -4.315977\r\n      } 0,${sc * -21.3044125} 0,${sc * -21.3044125} h ${sc * 0.4409718} c 0,0 ${\r\n        sc * 3.9e-6\r\n      },${sc * 5.8770835} 0,${sc * 8.7237915} 0,${sc * 0.826466} ${\r\n        sc * 1.7638887\r\n      },${sc * 0.826466} ${sc * 1.7638887},0 ${sc * -3e-6},-${sc * 3.305855} ${\r\n        sc * 4e-6\r\n      },${sc * -7.805497} 0,${sc * -10.5603755} ${sc * -3e-6},${\r\n        sc * -1.8393136\r\n      } ${sc * -2.6419141},${sc * -1.839317} ${sc * -5.2916674},${\r\n        sc * -1.8365876\r\n      } ${sc * -2.6419044},${sc * 0.00275} ${sc * -5.2916739399524},${\r\n        sc * 0.00275\r\n      } ${sc * -5.2916739399524},${sc * 1.8365876} v ${sc * 10.5603755} c 0,${\r\n        sc * 0.826466\r\n      } ${sc * 1.7638922399524},0.826466 ${sc * 1.7638922399524},0 v ${\r\n        sc * -8.7237915\r\n      } h ${sc * 0.4409729} v ${sc * 21.3044155} c 0,${sc * 1.193779} ${\r\n        sc * 2.6458359\r\n      },${sc * 1.193779} ${sc * 2.6458359},0 v ${sc * -11.203184} z m ${\r\n        sc * 2.6458379\r\n      },${sc * -16.8966039} c 0,${sc * 1.5214804} ${sc * -1.1845841},${\r\n        sc * 2.7548814\r\n      } ${sc * -2.6458379},${sc * 2.7548814} ${sc * -1.4612557},0 ${\r\n        sc * -2.645836\r\n      },${sc * -1.233401} ${sc * -2.645836},${sc * -2.7548814} 0,${\r\n        sc * -1.5214772\r\n      } ${sc * 1.1845803},${sc * -2.7548781} ${sc * 2.645836},${\r\n        sc * -2.7548781\r\n      } ${sc * 1.4612538},0 ${sc * 2.6458379},${sc * 1.2334009} ${\r\n        sc * 2.6458379\r\n      },${sc * 2.7548781} z`;\r\n    }\r\n    return pathString;\r\n  };\r\n\r\n  const createColor = (list, a) =>\r\n    `rgba(${list[0]},${list[1]},${list[2]},${a})`;\r\n\r\n  const getMaskPath = (x, y, width, height, anzahlPers) => {\r\n    const oneunit = height / anzahlPers;\r\n\r\n    const sc = oneunit / 31.75;\r\n\r\n    return createPersonMaskShape(x, y, width, height, anzahlPers, sc);\r\n  };\r\n\r\n  const getPath = (x, y, width, height, anzahlPers) => {\r\n    const oneunit = height / anzahlPers;\r\n\r\n    const sc = oneunit / 31.75;\r\n\r\n    return createPersonShape(x, y, width, height, anzahlPers, sc);\r\n  };\r\n\r\n  const getVkPath = (x, y, width, height, vkArray, anzahlPers) => {\r\n    let path = \"\";\r\n\r\n    const oneunit = height / anzahlPers;\r\n\r\n    const sc = oneunit / 31.75 / 1.05;\r\n\r\n    vkArray.forEach((item, i) => {\r\n      const newheight = item * oneunit;\r\n      let addHeight = 0;\r\n\r\n      if (i > 0) {\r\n        addHeight = oneunit * i;\r\n      }\r\n\r\n      path += `M${x + (width * 3) / 2 - (10.538 * sc) / 2},${\r\n        y + height - addHeight\r\n      }\r\n        l 0 -${newheight}\r\n        l ${10.583 * sc} 0\r\n        l 0 ${newheight}\r\n        Z`;\r\n    });\r\n\r\n    return path;\r\n  };\r\n\r\n  const MaskBar = (props) => {\r\n    const { fill, x, y, width, height, keyname, anzahl } = props;\r\n\r\n    const anzahlPers = anzahl[keyname];\r\n\r\n    return (\r\n      <path\r\n        d={getMaskPath(x, y, width, height, anzahlPers)}\r\n        stroke=\"none\"\r\n        fill={fill}\r\n      />\r\n    );\r\n  };\r\n\r\n  const PersonBar = (props) => {\r\n    const { fill, fillOpacity, x, y, width, height, keyname, anzahl } = props;\r\n\r\n    const anzahlPers = anzahl[keyname];\r\n\r\n    return (\r\n      <path\r\n        d={getPath(x, y, width, height, anzahlPers)}\r\n        stroke=\"none\"\r\n        fill={fill}\r\n        fillOpacity={fillOpacity}\r\n      />\r\n    );\r\n  };\r\n\r\n  const FillBar = (props) => {\r\n    const {\r\n      fill,\r\n      fillOpacity,\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n      keyname,\r\n      vk,\r\n      anzahl,\r\n    } = props;\r\n\r\n    const vkArray = vk[keyname];\r\n    const anzahlPers = anzahl[keyname];\r\n\r\n    return (\r\n      <path\r\n        d={getVkPath(x, y, width, height, vkArray, anzahlPers)}\r\n        stroke=\"none\"\r\n        fill={fill}\r\n        fillOpacity={fillOpacity}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderCustomizedLabel = (props) => {\r\n    const { x, y, width, height, value } = props;\r\n    return (\r\n      <g>\r\n        <text\r\n          x={x + width / 2}\r\n          y={y - 10}\r\n          fontSize={`${fontSize / 100}rem`}\r\n          fontWeight=\"1000\"\r\n          fill=\"black\"\r\n          textAnchor=\"middle\"\r\n          dominantBaseline=\"middle\"\r\n        >\r\n          {isNaN(parseFloat(value)) ? \"\" : parseFloat(value).toFixed(1)}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const AnzahlBars = tableData.map((key, i) => (\r\n    <Bar\r\n      dataKey={(data) => data.anzahl[key[0]]}\r\n      shape={<PersonBar keyname={key[0]} />}\r\n      fill={`rgb(${key[3].r},${key[3].g},${key[3].b})`}\r\n      fillOpacity={0.2}\r\n      stackId=\"a\"\r\n    >\r\n      {i === tableData.length - 1 ? (\r\n        <LabelList\r\n          dataKey={(data) => data.labelValue}\r\n          content={renderCustomizedLabel}\r\n          position=\"top\"\r\n        />\r\n      ) : null}\r\n    </Bar>\r\n  ));\r\n\r\n  const FillBars = tableData.map((key) => (\r\n    <Bar\r\n      dataKey={(data) => data.anzahl[key[0]]}\r\n      shape={<FillBar keyname={key[0]} />}\r\n      fill={`rgb(${key[3].r},${key[3].g},${key[3].b})`}\r\n      fillOpacity={1}\r\n      stackId=\"b\"\r\n    />\r\n  ));\r\n\r\n  const MaskBars = tableData.map((key) => (\r\n    <Bar\r\n      dataKey={(data) => data.anzahl[key[0]]}\r\n      shape={<MaskBar keyname={key[0]} />}\r\n      fill=\"white\"\r\n      stackId=\"c\"\r\n    />\r\n  ));\r\n\r\n  const handleOnError = (err, file, inputElem, reason) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const handleOnDrop = (data) => {\r\n    setDataset(data);\r\n    setbereichsauswahl(data[0].data);\r\n    setBereichCol(data[0].data[0]);\r\n\r\n    setalterauswahl(data[0].data);\r\n    setAlterCol(data[0].data[1]);\r\n\r\n    setvkauswahl(data[0].data);\r\n    setVkCol(data[0].data[2]);\r\n  };\r\n\r\n  const handleOnRemoveFile = (data) => {\r\n    console.log(\"---------------------------\");\r\n    console.log(data);\r\n    console.log(\"---------------------------\");\r\n  };\r\n\r\n  const [dataset, setDataset] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  const [bereichsauswahl, setbereichsauswahl] = useState([]);\r\n  const [bereichCol, setBereichCol] = useState(\"\");\r\n\r\n  const [alterauswahl, setalterauswahl] = useState([]);\r\n  const [alterCol, setAlterCol] = useState(\"\");\r\n\r\n  const [vkauswahl, setvkauswahl] = useState([]);\r\n  const [vkCol, setVkCol] = useState(null);\r\n\r\n  const [minAge, setMinAge] = useState(null);\r\n  const [maxAge, setmaxAge] = useState(null);\r\n  const [fontSize, setFontSize] = useState(100);\r\n\r\n  const [graphheight, setGraphheight] = useState(300);\r\n\r\n  const [resultVis, setResultVis] = useState(false);\r\n\r\n  const createData = () => {\r\n    const csvcols = dataset[0].data.length;\r\n\r\n    const bereichsIndex = dataset[0].data.findIndex(\r\n      (item) => item == bereichCol\r\n    );\r\n\r\n    const altersIndex = dataset[0].data.findIndex((item) => item == alterCol);\r\n    const vkIndex = dataset[0].data.findIndex((item) => item == vkCol);\r\n\r\n    const newDataset = dataset.filter((item) => item.data.length == csvcols);\r\n\r\n    newDataset.shift();\r\n\r\n    const allKeys = newDataset.map((item, i) => {\r\n      return item.data[bereichsIndex];\r\n    });\r\n\r\n    const keysunique = new Set(allKeys);\r\n\r\n    const keysliste = Array.from(keysunique);\r\n\r\n    const newkeys = keysliste.map((item, i) => {\r\n      let color = {};\r\n      console.log(tableData);\r\n      if (data == null) {\r\n        color = {\r\n          r: Math.floor(Math.random() * 256),\r\n          g: Math.floor(Math.random() * 256),\r\n          b: Math.floor(Math.random() * 256),\r\n          a: 1,\r\n        };\r\n      } else {\r\n        color = {\r\n          r: tableData[i][3].r,\r\n          g: tableData[i][3].g,\r\n          b: tableData[i][3].b,\r\n          a: 1,\r\n        };\r\n      }\r\n      return {\r\n        name: item,\r\n        color,\r\n      };\r\n    });\r\n\r\n    console.log(newkeys);\r\n\r\n    setTableData(\r\n      newkeys.map((item) => {\r\n        return [\r\n          item.name,\r\n          newDataset.filter((it) => it.data[bereichsIndex] == item.name).length,\r\n          newDataset\r\n            .filter((it) => it.data[bereichsIndex] == item.name)\r\n            .map((newit) => parseFloat(newit.data[vkIndex].replace(\",\", \".\")))\r\n            .reduce((a, b) => a + b, 0)\r\n            .toFixed(2),\r\n          {\r\n            r: item.color.r,\r\n            g: item.color.g,\r\n            b: item.color.b,\r\n            a: 1,\r\n          },\r\n          false,\r\n        ];\r\n      })\r\n    );\r\n\r\n    const allAges = newDataset.map((item, i) => {\r\n      return parseInt(item.data[altersIndex], 10);\r\n    });\r\n\r\n    let min = Math.min(...allAges);\r\n    let max = Math.max(...allAges);\r\n\r\n    if (minAge) {\r\n      min = minAge;\r\n    }\r\n\r\n    if (maxAge) {\r\n      max = maxAge;\r\n    }\r\n\r\n    var ages = [];\r\n    for (var i = min; i <= max; i++) {\r\n      ages.push(i);\r\n    }\r\n\r\n    const newData = ages.map((item) => {\r\n      let anzahlobj = {};\r\n      keysliste.forEach((key) => {\r\n        anzahlobj[key] = newDataset.filter(\r\n          (i) => i.data[bereichsIndex] == key && i.data[altersIndex] == item\r\n        ).length;\r\n      });\r\n\r\n      let vkobj = {};\r\n      keysliste.forEach((key) => {\r\n        vkobj[key] = newDataset\r\n          .filter(\r\n            (i) => i.data[bereichsIndex] == key && i.data[altersIndex] == item\r\n          )\r\n          .map((newItem) =>\r\n            parseFloat(newItem.data[vkIndex].replace(\",\", \".\"))\r\n          );\r\n      });\r\n\r\n      const arr = [];\r\n\r\n      Object.values(vkobj).forEach((item) => item.map((i) => arr.push(i)));\r\n      const lval = arr.reduce((a, b) => a + b, 0).toFixed(2);\r\n\r\n      return {\r\n        name: item,\r\n        anzahl: anzahlobj,\r\n        vk: vkobj,\r\n        labelPosition: Object.values(anzahlobj).reduce((a, b) => a + b, 0),\r\n        labelValue: lval == 0 ? null : lval,\r\n      };\r\n    });\r\n\r\n    setData(newData);\r\n    setResultVis(true);\r\n  };\r\n\r\n  const handleChange = (index) => (color) => {\r\n    tableData[index][3] = color.rgb;\r\n    setTableData([...tableData]);\r\n  };\r\n\r\n  const handleclick = (index) => () => {\r\n    tableData[index][4] = !tableData[index][4];\r\n    setTableData([...tableData]);\r\n  };\r\n\r\n  const handleClose = (index) => () => {\r\n    tableData[index][4] = false;\r\n    setTableData([...tableData]);\r\n  };\r\n\r\n  const reColor = (index) => () => {\r\n    tableData[index][3] = {\r\n      r: Math.floor(Math.random() * 256),\r\n      g: Math.floor(Math.random() * 256),\r\n      b: Math.floor(Math.random() * 256),\r\n      a: 1,\r\n    };\r\n    setTableData([...tableData]);\r\n  };\r\n\r\n  const TableInsert = tableData.map((item, index) => (\r\n    <tr>\r\n      {item.map((element, i) =>\r\n        i == 3 ? (\r\n          <td>\r\n            <Button\r\n              size=\"sm\"\r\n              style={{\r\n                background: `rgba(${tableData[index][3].r},${tableData[index][3].g},${tableData[index][3].b},${tableData[index][3].a})`,\r\n              }}\r\n              onClick={handleclick(index)}\r\n            >\r\n              Choose\r\n            </Button>\r\n            {tableData[index][4] ? (\r\n              <div style={{ position: \"absolute\", zIndex: \"2\" }}>\r\n                <div\r\n                  style={{\r\n                    position: \"fixed\",\r\n                    top: \"0px\",\r\n                    right: \"0px\",\r\n                    bottom: \"0px\",\r\n                    left: \"0px\",\r\n                  }}\r\n                  onClick={handleClose(index)}\r\n                />\r\n                <SketchPicker\r\n                  name={\"asdqwe\"}\r\n                  color={element}\r\n                  asdqwe={i}\r\n                  onChange={handleChange(`${index}`)}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <Button onClick={reColor(index)} className=\"ml-2\" size=\"sm\">\r\n              <i className=\"fas fa-sync-alt\"></i>\r\n            </Button>\r\n          </td>\r\n        ) : i == 4 ? null : (\r\n          <td>{element}</td>\r\n        )\r\n      )}\r\n    </tr>\r\n  ));\r\n\r\n  const dlGraph = () => {\r\n    const graph = document.querySelector(\".recharts-surface\");\r\n    let svgURL = new XMLSerializer().serializeToString(graph);\r\n    let svgBlob = new Blob([svgURL], { type: \"image/svg+xml;charset=utf-8\" });\r\n    saveAs(svgBlob, \"altersstruktur.svg\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataset != null) {\r\n      createData();\r\n    }\r\n  }, [graphheight, minAge, maxAge]);\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"my-3\">Click and Drag Upload</h5>\r\n      <CSVReader\r\n        className=\"mb-2\"\r\n        onDrop={handleOnDrop}\r\n        onError={handleOnError}\r\n        addRemoveButton\r\n        onRemoveFile={handleOnRemoveFile}\r\n      >\r\n        <span>Drop CSV file here or click to upload.</span>\r\n      </CSVReader>\r\n\r\n      <Form>\r\n        <Form.Row controlId=\"exampleForm.SelectCustom\">\r\n          <Col>\r\n            <Form.Label>Bereich</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              value={bereichCol}\r\n              onChange={(e) => setBereichCol(e.target.value)}\r\n            >\r\n              {bereichsauswahl.map((item) => (\r\n                <option>{item}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n\r\n          <Col controlId=\"exampleForm.SelectCustom\">\r\n            <Form.Label>Alter</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              value={alterCol}\r\n              onChange={(e) => setAlterCol(e.target.value)}\r\n            >\r\n              {alterauswahl.map((item) => (\r\n                <option>{item}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n          <Col controlId=\"exampleForm.SelectCustom\">\r\n            <Form.Label>VK</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              custom\r\n              value={vkCol}\r\n              onChange={(e) => setVkCol(e.target.value)}\r\n            >\r\n              {vkauswahl.map((item) => (\r\n                <option>{item}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Row>\r\n      </Form>\r\n\r\n      <Button\r\n        className=\"my-3\"\r\n        variant=\"info\"\r\n        size=\"\"\r\n        block\r\n        disabled={bereichCol == \"\" && alterCol == \"\" && vkCol == \"\"}\r\n        onClick={createData}\r\n      >\r\n        Proceed\r\n      </Button>\r\n\r\n      {resultVis ? (\r\n        <>\r\n          <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Bereich</th>\r\n                <th>Anzahl Mitarbeiter</th>\r\n                <th>VK</th>\r\n                <th>Color</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{TableInsert}</tbody>\r\n          </Table>\r\n\r\n          <Row className=\"my-3\">\r\n            <Col>\r\n              <Form.Control\r\n                min=\"10\"\r\n                max=\"1000\"\r\n                placeholder=\"Graph Height\"\r\n                type=\"number\"\r\n                onChange={(e) => setGraphheight(parseInt(e.target.value))}\r\n                value={graphheight}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                min=\"0\"\r\n                max=\"100\"\r\n                placeholder=\"Font-Size VK in %\"\r\n                type=\"number\"\r\n                onChange={(e) => setFontSize(parseInt(e.target.value))}\r\n                value={fontSize}\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Control\r\n                value={minAge}\r\n                onChange={(e) => setMinAge(parseInt(e.target.value))}\r\n                placeholder=\"Min. Age\"\r\n                type=\"number\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                value={maxAge}\r\n                onChange={(e) => setmaxAge(e.target.value)}\r\n                placeholder=\"Max. Age\"\r\n                type=\"number\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Button variant=\"success\" block onClick={dlGraph}>\r\n                Download Graph\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div style={{ height: `${graphheight}px`, width: \"100%\" }}>\r\n            <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\r\n              <BarChart\r\n                data={data}\r\n                margin={{\r\n                  top: 20,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n                barGap={\"0%\"}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis\r\n                  tickMargin={4}\r\n                  padding={{ left: 10, right: 10 }}\r\n                  dataKey=\"name\"\r\n                />\r\n                <YAxis tickMargin={4} padding={{ bottom: 10 }} />\r\n                {FillBars}\r\n                {AnzahlBars}\r\n                {MaskBars}\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Personal;\r\n","import Header from \"./components/Header\";\r\nimport Personal from \"./components/Personal\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Container>\r\n        <Personal />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}